name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - os: windows
            arch: x64
            runner: windows-latest
            rid: win-x64
            artifact: azdo-wi-creator-win-x64.zip
            archive_ext: zip
          - os: windows
            arch: arm64
            runner: windows-latest
            rid: win-arm64
            artifact: azdo-wi-creator-win-arm64.zip
            archive_ext: zip
          - os: linux
            arch: x64
            runner: ubuntu-latest
            rid: linux-x64
            artifact: azdo-wi-creator-linux-x64.tar.gz
            archive_ext: tar.gz
          - os: linux
            arch: arm64
            runner: ubuntu-latest
            rid: linux-arm64
            artifact: azdo-wi-creator-linux-arm64.tar.gz
            archive_ext: tar.gz
          - os: macos
            arch: x64
            runner: macos-latest
            rid: osx-x64
            artifact: azdo-wi-creator-osx-x64.tar.gz
            archive_ext: tar.gz
          - os: macos
            arch: arm64
            runner: macos-latest
            rid: osx-arm64
            artifact: azdo-wi-creator-osx-arm64.tar.gz
            archive_ext: tar.gz

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore azdo-wi-creator/azdo-wi-creator.csproj

      - name: Build
        run: dotnet build azdo-wi-creator/azdo-wi-creator.csproj -c Release --no-restore

      - name: Publish
        run: |
          dotnet publish azdo-wi-creator/azdo-wi-creator.csproj \
            -c Release \
            -r ${{ matrix.rid }} \
            --self-contained true \
            -p:PublishSingleFile=true \
            -p:PublishTrimmed=false \
            -p:IncludeNativeLibrariesForSelfExtract=true \
            -o ./publish/${{ matrix.rid }}

      - name: Extract version
        id: version
        run: |
          VERSION=$(grep -oP '<Version>\K[^<]+' azdo-wi-creator/azdo-wi-creator.csproj 2>/dev/null || grep -o '<Version>[^<]*</Version>' azdo-wi-creator/azdo-wi-creator.csproj | sed 's/<Version>//;s/<\/Version>//')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"
        shell: bash

      - name: Create archive (Windows)
        if: matrix.os == 'windows'
        run: |
          cd ./publish/${{ matrix.rid }}
          7z a -tzip ../../azdo-wi-creator-${{ matrix.rid }}-v${{ steps.version.outputs.version }}.zip azdo-wi-creator.exe

      - name: Create archive (Unix)
        if: matrix.os != 'windows'
        run: |
          cd ./publish
          tar -czf azdo-wi-creator-${{ matrix.rid }}-v${{ steps.version.outputs.version }}.tar.gz -C ${{ matrix.rid }} azdo-wi-creator

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: azdo-wi-creator-${{ matrix.rid }}-v${{ steps.version.outputs.version }}
          path: ./publish/azdo-wi-creator-${{ matrix.rid }}-v${{ steps.version.outputs.version }}.${{ matrix.archive_ext }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
